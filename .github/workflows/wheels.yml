name: Build

#on: [push, pull_request, workflow_call]
on: 
  push: 
    branches:
      - main
  pull_request:
    branches:
      - main
  release:
    types:
      - published

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: [3.5,3.6, 3.7, 3.8, 3.9, 3.10]
        os: [ubuntu-latest, ubuntu-21.04, ubuntu-20.04, windows-2019, windows-latest, macOs-latest, macOS-10, maOS-11, macOS-12, macOS-13]
        
    steps:
      - name: Checkout PGBM 
        uses: actions/checkout@v4

      #to host cibuildwheel
      - name: Setup Python
        uses: actions/setup-python@v4
        with: 
          python-version: '3.9'

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel

      - name: Build wheels
        run: python -m cibuildwheel --output-dir wheelhouse
        env:
          CIBW_ARCHS_MACOS: x86_64 arm64
      - uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Build sdist
        run: pipx run build --sdist

      - uses: actions/upload-artifact@v3
        with:
          path: dist/*.tar.gz

  pypi-publish:
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    name: upload release to PyPI
    environment: pypi
    permissions:
      id-token: write
    if: github.event_name == 'release' && github.event.action == 'published'
    # or, alternatively, upload to PyPI on every tag starting with 'v' (remove on: release above to use this)
    # if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/download-artifact@v3
        with:
          # unpacks default artifact into dist/
          # if `name: artifact` is omitted, the action will create extra parent dir
          name: artifact
          path: dist

      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages_dir: artifact/





